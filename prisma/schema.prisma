generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["interactiveTransactions"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model BusinessTerm {
  id         Int        @id
  term_name  String
  start_date DateTime
  end_date   DateTime
  created_at DateTime   @default(now())
  updated_at DateTime   @updatedAt
  MultiTerm  MultiTerm?
}

model MultiTerm {
  id               Int                @id
  business_term_id Int                @unique
  start_date       DateTime
  end_date         DateTime
  created_at       DateTime           @db.DateTime(0)
  updated_at       DateTime           @updatedAt
  ManagerNormApply ManagerNormApply[]
  multi_evaluation MultiEvaluation[]
  business_term    BusinessTerm       @relation(fields: [business_term_id], references: [id])
}

model User {
  id         Int      @id
  name       String
  created_at DateTime @default(now())
  updated_at DateTime @updatedAt
}

model MultiEvaluation {
  id                  Int       @id @default(autoincrement())
  user_id             Int
  target_user_id      Int
  multi_term_id       Int
  score               Int
  good_comment        String
  improvement_comment String
  created_at          DateTime  @default(now()) @db.DateTime(0)
  updated_at          DateTime  @default(now()) @db.DateTime(0)
  multi_term          MultiTerm @relation(fields: [multi_term_id], references: [id])

  @@index([multi_term_id], map: "MultiEvaluation_multi_term_id_fkey")
}

model ReportSetting {
  id                  Int                   @id @default(autoincrement())
  term_id             Int                   @unique(map: "UNIQUE_KEY_TERM_ID")
  save_user_id        Int
  saved_at            DateTime              @default(dbgenerated("('0000-00-00 00:00:00')")) @db.DateTime(0)
  ReportSettingDetail ReportSettingDetail[]
}

model ReportSettingDetail {
  id                  Int           @id @default(autoincrement())
  report_setting_id   Int
  postioin_layer_type Int           @db.TinyInt
  input_flg           Boolean
  theme               String        @db.VarChar(100)
  chara_num           Int?
  ReportSetting       ReportSetting @relation(fields: [report_setting_id], references: [id], onUpdate: Restrict, map: "fk")

  @@index([report_setting_id], map: "fk")
}

model ManagerNormApply {
  id              Int       @id @default(autoincrement()) @db.UnsignedInt
  user_id         Int
  multi_term_id   Int
  reason          String    @db.Text
  exemption_count Int
  apply_status    Int
  remand_reason   String    @db.Text
  created_at      DateTime  @default(now()) @db.DateTime(0)
  updated_at      DateTime  @default(now()) @db.DateTime(0)
  MultiTerm       MultiTerm @relation(fields: [multi_term_id], references: [id], onUpdate: Restrict, map: "ManagerNormApply_ibfk_1")

  @@index([multi_term_id], map: "multi_term_id")
}
